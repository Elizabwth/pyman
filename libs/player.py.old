import pymunk
from pymunk import Vec2d
import pyglet
from pyglet.gl import *
import math

class Player(object):
	def __init__(self, scene, position=(0,0)):

		radius, mass = 7.5, .001

		p_man_moment = pymunk.moment_for_circle(mass, 0, radius)

		self.p_man 				= pymunk.Body(mass, p_man_moment)
		self.p_man.position 	= position
		p_man_shape 			= pymunk.Circle(self.p_man, radius)
		p_man_shape.friction 	= .5
		p_man_shape.group 		= 1
		p_man_shape.collision_type = 1
		p_man_shape.elasticity 	= .2

		p_man_shape.fill_color = (0,0,0,0)

		scene.space.add(self.p_man, p_man_shape)

		pman_img = pyglet.image.load('resources/textures/pman.png')
		pman_img.anchor_x, pman_img.anchor_y = pman_img.width//2, pman_img.height//2
		tex = pman_img.get_texture()
		
		glTexParameteri(tex.target, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
		glTexParameteri(tex.target, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
		
		self.pman_s = pyglet.sprite.Sprite(
			pman_img, batch=scene.normal_batch, group=scene.ordered_group3)

		self.pman_s.scale = 1
		
	def draw(self):
		self.pman_s.x,self.pman_s.y = self.p_man.position
		self.pman_s.rotation = math.degrees(-self.p_man.angle)

		if self.p_man.is_sleeping:
			self.p_man.activate()

class Ghost(object):
	def __init__(self, scene, tex = 'blinky', position=(0,0)):

		radius, mass = 7, .001

		p_man_moment = pymunk.moment_for_circle(mass, 0, radius)

		self.p_man 				= pymunk.Body(mass, p_man_moment)
		self.p_man.position 	= position
		p_man_shape 			= pymunk.Circle(self.p_man, radius)
		p_man_shape.friction 	= .5
		#p_man_shape.group 		= 3
		p_man_shape.elasticity 	= .2

		p_man_shape.fill_color = (0,0,0,0)

		scene.space.add(self.p_man, p_man_shape)

		pman_img = pyglet.image.load('resources/textures/'+tex+'.png')
		pman_img.anchor_x, pman_img.anchor_y = pman_img.width/2, pman_img.height/2
		tex = pman_img.get_texture()
		
		glTexParameteri(tex.target, GL_TEXTURE_MIN_FILTER, GL_NEAREST)
		glTexParameteri(tex.target, GL_TEXTURE_MAG_FILTER, GL_NEAREST)
		
		self.pman_s = pyglet.sprite.Sprite(
			pman_img, batch=scene.normal_batch, group=scene.ordered_group3)

		self.pman_s.scale = 1
		
	def draw(self):
		self.pman_s.x,self.pman_s.y = self.p_man.position
		self.pman_s.rotation = math.degrees(-self.p_man.angle)

		if self.p_man.is_sleeping:
			self.p_man.activate()

class Nums(object):
	def __init__(self, scene, point_list):

		def remove_num(space, arbiter):
			first_shape = arbiter.shapes[0] 
			space.add_post_step_callback(space.remove, first_shape)
			#first_shape.sprite.visible = False
			first_shape.glpt.vertices = [-20000,-20000]

			return False

		scene.space.add_collision_handler(2, 1, begin = remove_num)

		for point in point_list:
			num = pymunk.Circle(pymunk.Body(), 1)
			num.body.position = point
			num.collision_type = 2
			num.sensor = True
			scene.space.add(num)

			num.glpt = scene.normal_batch.add(1, pyglet.gl.GL_POINTS, scene.ordered_group2,
							('v2f', point),
							('c3B', (255,184,151)))